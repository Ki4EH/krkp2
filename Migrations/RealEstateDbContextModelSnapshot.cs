// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace task.Migrations
{
    [DbContext(typeof(RealEstateDbContext))]
    partial class RealEstateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BuildingMaterial", b =>
                {
                    b.Property<int>("MaterialCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MaterialCode"));

                    b.Property<string>("MaterialName")
                        .HasColumnType("text");

                    b.HasKey("MaterialCode");

                    b.ToTable("BuildingMaterials");
                });

            modelBuilder.Entity("District", b =>
                {
                    b.Property<int>("DistrictCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DistrictCode"));

                    b.Property<string>("DistrictName")
                        .HasColumnType("text");

                    b.HasKey("DistrictCode");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Evaluation", b =>
                {
                    b.Property<int>("EvaluationCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EvaluationCode"));

                    b.Property<int>("CriterionCode")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObjectCode")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("EvaluationCode");

                    b.HasIndex("CriterionCode");

                    b.HasIndex("ObjectCode");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("EvaluationCriterion", b =>
                {
                    b.Property<int>("CriterionCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CriterionCode"));

                    b.Property<string>("CriterionName")
                        .HasColumnType("text");

                    b.HasKey("CriterionCode");

                    b.ToTable("EvaluationCriteria");
                });

            modelBuilder.Entity("RealEstateObject", b =>
                {
                    b.Property<int>("ObjectCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ObjectCode"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DistrictCode")
                        .HasColumnType("integer");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ListingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaterialCode")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("RoomCount")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TypeCode")
                        .HasColumnType("integer");

                    b.HasKey("ObjectCode");

                    b.HasIndex("DistrictCode");

                    b.HasIndex("MaterialCode");

                    b.HasIndex("TypeCode");

                    b.ToTable("RealEstateObjects");
                });

            modelBuilder.Entity("Realtor", b =>
                {
                    b.Property<int>("RealtorCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RealtorCode"));

                    b.Property<string>("ContactPhone")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.HasKey("RealtorCode");

                    b.ToTable("Realtors");
                });

            modelBuilder.Entity("Sale", b =>
                {
                    b.Property<int>("SaleCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SaleCode"));

                    b.Property<int>("ObjectCode")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("RealtorCode")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SaleCode");

                    b.HasIndex("ObjectCode");

                    b.HasIndex("RealtorCode");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Type", b =>
                {
                    b.Property<int>("TypeCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeCode"));

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.HasKey("TypeCode");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Evaluation", b =>
                {
                    b.HasOne("EvaluationCriterion", "EvaluationCriterion")
                        .WithMany()
                        .HasForeignKey("CriterionCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateObject", "RealEstateObject")
                        .WithMany()
                        .HasForeignKey("ObjectCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluationCriterion");

                    b.Navigation("RealEstateObject");
                });

            modelBuilder.Entity("RealEstateObject", b =>
                {
                    b.HasOne("District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingMaterial", "BuildingMaterial")
                        .WithMany()
                        .HasForeignKey("MaterialCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuildingMaterial");

                    b.Navigation("District");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Sale", b =>
                {
                    b.HasOne("RealEstateObject", "RealEstateObject")
                        .WithMany()
                        .HasForeignKey("ObjectCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Realtor", "Realtor")
                        .WithMany()
                        .HasForeignKey("RealtorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealEstateObject");

                    b.Navigation("Realtor");
                });
#pragma warning restore 612, 618
        }
    }
}
